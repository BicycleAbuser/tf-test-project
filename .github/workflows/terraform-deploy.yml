name: Terraform Deploy

on:
  #push:
  #  branches:
  #    - main  # on push to main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Env to Deploy'
        required: true
        type: choice
        options:
          - dev
          - qa
env:
  TF_VERSION: 1.5.7

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    outputs:
      selected_env: ${{ steps.detect.outputs.selected_env }}
      deploy_path: ${{ steps.detect.outputs.deploy_path }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Detect Changed Folder
        id: detect
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger detected."
            echo "selected_env=${{ inputs.environment }}" >> $GITHUB_ENV
            echo "deploy_path=${{ inputs.environment }}" >> $GITHUB_ENV
            echo "::set-output name=selected_env::${{ inputs.environment }}"
            echo "::set-output name=deploy_path::${{ inputs.environment }}"
          else
            echo "Automatic push detected."
            CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^dev\|^qa' | cut -d/ -f1 | sort -u)
            echo "Changed directories: $CHANGED_DIRS"

            COUNT=$(echo "$CHANGED_DIRS" | wc -l)

            if [[ "$COUNT" -ne 1 ]]; then
              echo "Error: Changes detected in multiple environments or none. Aborting."
              exit 1
            fi

            ENVIRONMENT=$(echo "$CHANGED_DIRS" | head -n1)
            echo "selected_env=$ENVIRONMENT" >> $GITHUB_ENV
            echo "deploy_path=$ENVIRONMENT" >> $GITHUB_ENV
            echo "::set-output name=selected_env::$ENVIRONMENT"
            echo "::set-output name=deploy_path::$ENVIRONMENT"
          fi

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ steps.detect.outputs.deploy_path }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform/environments/${{ steps.detect.outputs.deploy_path }}

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ steps.detect.outputs.selected_env }}
          path: terraform/environments/${{ steps.detect.outputs.deploy_path }}/tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ needs.plan.outputs.selected_env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ needs.plan.outputs.selected_env }}
          path: ./${{ needs.plan.outputs.deploy_path }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./${{ needs.plan.outputs.deploy_path }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./${{ needs.plan.outputs.deploy_path }}