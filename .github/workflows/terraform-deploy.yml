name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Env to Deploy'
        required: true
        type: choice
        options:
          - dev
          - qa

env:
  TF_VERSION: 1.5.7
  TF_LOG: DEBUG
  TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
  TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
  TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      selected_env: ${{ inputs.environment }}
      deploy_path: ${{ inputs.environment }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ inputs.environment }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform/environments/${{ inputs.environment }}

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ inputs.environment }}
          path: terraform/environments/${{ inputs.environment }}/tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ needs.plan.outputs.selected_env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ needs.plan.outputs.selected_env }}
          path: terraform/environments/${{ needs.plan.outputs.selected_env }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ needs.plan.outputs.selected_env }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: terraform/environments/${{ needs.plan.outputs.selected_env }}